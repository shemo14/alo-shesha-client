import React, { Component } from 'react';import {View, Text, Image, TouchableOpacity, Dimensions, ScrollView } from 'react-native';import { Button, Icon, Container, Header, Right, Body, Content, Footer, FooterTab, Left, Card, CardItem, List, ListItem, Badge } from 'native-base';import { DoubleBounce } from 'react-native-loader';import CONST from "../consts";import axios from "axios/index";import colors from "../consts/colors";import { connect } from "react-redux";import { getCart } from '../actions'import CartProduct from './CartProduct';const height = Dimensions.get('window').height;class Cart extends Component{	constructor(props){		super(props);		this.state = {			products: [],			total: null,			key: null,			charge: null,			pricesCollection: [this.props.total],			cartProducts: []		}	}	static navigationOptions = () => ({		drawerLabel: ()=> null	});	reloadCart(id){		this.setState({ key: null });		axios.post(CONST.url + 'deleteFromCart', { cart_id: id }).then(response => {			this.componentWillMount();		});	}	renderLoader(){		if (this.state.charge === null){			return (				<View style={{ alignItems: 'center', justifyContent: 'center', height: 500 }}>					<DoubleBounce size={20} color={colors.red} />				</View>			);		}	}	componentWillMount() {		this.props.getCart(this.props.user.id);	}	componentWillReceiveProps(newProps) {		this.setState({			products: newProps.products,			total: newProps.total,			charge: newProps.charge		})	}	calcTotal(price){		let priceCollection = this.state.pricesCollection;		priceCollection.push(price);		this.setState({ priceCollection, total: priceCollection.reduce(this.getTotal) });	}	renderProducts(){		return this.state.products.map((product, i) =>  ( <CartProduct cartProducts={(data) => this.cartProducts(data)} calcTotal={(price) => this.calcTotal(price)} deleteProduct={() => this.reloadCart(product.id)} key={i} product={product} /> ))	}	cartProducts(data){	}	getTotal(total, sum){		return total + sum;	}	componentDidMount() {		let pricesCollection = this.state.pricesCollection;		return this.state.products.map((product, i) => {				pricesCollection.push(product.price);				this.setState({ pricesCollection: pricesCollection })			}		)	}	makeOrder(){		this.props.navigation.navigate('location', { params: { userId: this.props.user.id, total: this.state.total, charge: this.state.charge, products: this.state.products } })	}	render(){		return(			<Container>				<Header style={{ height: 70, backgroundColor: colors.wight, paddingTop: 15 }}>					<Right style={{ flex: 0 }}>						<Button transparent onPress={() => this.props.navigation.openDrawer()}>							<Icon name='menu' style={{ color: colors.gray, fontSize: 30, marginTop: 8, left: -10 }} />						</Button>					</Right>					<Body style={{ width: '100%', alignItems: 'center', alignSelf: 'center' }}>					<Text style={{ color: colors.gray, textAlign: 'center', marginRight: 20, fontSize: 18 }}>سلة المشترايات</Text>					</Body>					<Left style={{ flex: 0 }}>						<Button transparent onPress={() => this.props.navigation.goBack()}>							<Icon name={'ios-arrow-back'} type='Ionicons' style={{ color: colors.gray, marginTop: 8 }} />						</Button>					</Left>				</Header>				{ this.renderLoader() }				<Content style={{ paddingHorizontal: 10 }}>					<ScrollView style={{ height: height-260 }}>						{ this.renderProducts() }					</ScrollView>				</Content>				<View style={{ position: 'absolute', bottom: 0, width: '100%', backgroundColor: colors.wight, height: 185, padding: 10 }}>					<List>						<ListItem style={{ flex: 1, marginLeft: 0 }}>							<Left style={{ flex: 1 }}>								<Text style={{ fontSize: 16, marginLeft: 4, marginRight: 4 }}>الشحن :</Text>							</Left>							<Right style={{ flex: 1, marginRight: -15 }}>								<Text style={{ fontSize: 16, marginLeft: 4, marginRight: 4, color: colors.gray }}>{ this.state.charge } ريال سعودي</Text>							</Right>						</ListItem>						<ListItem style={{ flex: 1, marginLeft: 0 }}>							<Left style={{ flex: 1 }}>								<Text style={{ fontSize: 16, marginLeft: 4, marginRight: 4 }}>المجموع الكلي :</Text>							</Left>							<Right style={{ flex: 1, marginRight: -15 }}>								<Text style={{ fontSize: 16, marginLeft: 4, marginRight: 4, color: colors.gray }}>{ this.state.total } ريال سعودي</Text>							</Right>						</ListItem>					</List>					<Button style={{ backgroundColor: '#ea5454', marginTop: 5, borderRadius: 8 }} onPress={() => this.makeOrder()} block>						<Text style={{ color: '#fff' }}>اشتري الان</Text>					</Button>				</View>				<Footer>					<FooterTab style={{ backgroundColor: colors.wight }}>						<Button vertical onPress={() => this.props.navigation.navigate('home')}>							<Icon name="home" type='FontAwesome' style={{ color: colors.gray }}/>							<Text style={{ color: colors.gray }}>الرئيسية</Text>						</Button>						<Button vertical onPress={() => this.props.navigation.navigate('orders')}>							<Icon name="shop" type='Entypo' style={{ color: colors.gray }}/>							<Text style={{ color: colors.gray }}>طلباتي</Text>						</Button>						<Button badge vertical style={{ backgroundColor: colors.lightgray }}>							<Badge style={{ width: 17, color: colors.red, left: -10, paddingTop: 0 }}><Text style={{ color: colors.wight, textAlign: 'center' }}>{ this.props.count }</Text></Badge>							<Icon type='Entypo' name="shopping-cart" style={{ color: colors.yellow }} />							<Text style={{ color: colors.yellow }}>السلة</Text>						</Button>						<Button vertical onPress={() => this.props.navigation.navigate('profile')}>							<Icon name="person" type='MaterialIcons' style={{ color: colors.gray }} />							<Text style={{ color: colors.gray }}>حسابي</Text>						</Button>					</FooterTab>				</Footer>			</Container>		)	}}const mapStateToProps = ({ profile, cart }) => {	return {		user: profile.user,		products: cart.products,		total: cart.total,		charge: cart.charge,		count: cart.count,	};};export default connect(mapStateToProps, { getCart })(Cart);